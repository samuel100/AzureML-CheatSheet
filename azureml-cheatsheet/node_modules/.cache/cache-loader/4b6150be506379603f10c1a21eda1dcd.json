{"remainingRequest":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/babel-loader/lib/index.js??ref--11-1!/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/docs/vs-code-snippets/snippets.md","dependencies":[{"path":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/docs/vs-code-snippets/snippets.md","mtime":1602306259860},{"path":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-vs-code-snippets-snippets-md-be9.json","mtime":1602306873110},{"path":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/cache-loader/dist/cjs.js","mtime":1602134439496},{"path":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/babel-loader/lib/index.js","mtime":1602134439180},{"path":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1602134465694},{"path":"/home/amin/repos/AzureML-CheatSheet/azureml-cheatsheet/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1602134465218}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvYW1pbi9yZXBvcy9BenVyZU1MLUNoZWF0U2hlZXQvYXp1cmVtbC1jaGVhdHNoZWV0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvaG9tZS9hbWluL3JlcG9zL0F6dXJlTUwtQ2hlYXRTaGVldC9henVyZW1sLWNoZWF0c2hlZXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17dGl0bGU6J1ZTIENvZGUgU25pcHBldHMnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6InZzLWNvZGUtc25pcHBldHMvc25pcHBldHMiLCJpZCI6InZzLWNvZGUtc25pcHBldHMvc25pcHBldHMiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiVlMgQ29kZSBTbmlwcGV0cyIsImRlc2NyaXB0aW9uIjoiV2UgaGF2ZSBjb21waWxlZCBhIGNvbGxlY3Rpb24gb2YgdXNlZnVsIHRlbXBsYXRlcyBpbiB0aGUgZm9ybSBvZiIsInNvdXJjZSI6IkBzaXRlL2RvY3MvdnMtY29kZS1zbmlwcGV0cy9zbmlwcGV0cy5tZCIsInNsdWciOiIvdnMtY29kZS1zbmlwcGV0cy9zbmlwcGV0cyIsInBlcm1hbGluayI6Ii9henVyZW1sLWNoZWF0c2hlZXQvZG9jcy9uZXh0L3ZzLWNvZGUtc25pcHBldHMvc25pcHBldHMiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL3ZzLWNvZGUtc25pcHBldHMvc25pcHBldHMubWQiLCJ2ZXJzaW9uIjoiY3VycmVudCJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidCYXNpYyBjb3JlIGltcG9ydHMnLGlkOidiYXNpYy1jb3JlLWltcG9ydHMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1BpcGVsaW5lIGltcG9ydHMnLGlkOidwaXBlbGluZS1pbXBvcnRzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidDcmVhdGUgQU1MIFdvcmtzcGFjZSBmcm9tIGNvbmZpZycsaWQ6J2NyZWF0ZS1hbWwtd29ya3NwYWNlLWZyb20tY29uZmlnJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidDcmVhdGUgQU1MIFdvcmtzcGFjZSBmcm9tIGNvbmZpZyBhbmQgYXV0aCcsaWQ6J2NyZWF0ZS1hbWwtd29ya3NwYWNlLWZyb20tY29uZmlnLWFuZC1hdXRoJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidSZWdpc3RlciBBenVyZSBCbG9iIENvbnRhaW5lciBGcm9tIFNBUycsaWQ6J3JlZ2lzdGVyLWF6dXJlLWJsb2ItY29udGFpbmVyLWZyb20tc2FzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidDcmVhdGUgQ29tcHV0ZSBDbHVzdGVyIHdpdGggU1NIJyxpZDonY3JlYXRlLWNvbXB1dGUtY2x1c3Rlci13aXRoLXNzaCcsY2hpbGRyZW46W119XTt2YXIgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jOnJpZ2h0VG9jfTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsIldlIGhhdmUgY29tcGlsZWQgYSBjb2xsZWN0aW9uIG9mIHVzZWZ1bCB0ZW1wbGF0ZXMgaW4gdGhlIGZvcm0gb2ZcbiIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2RvY3MvZWRpdG9yL3VzZXJkZWZpbmVkc25pcHBldHMifSksIlZTIGNvZGUgc25pcHBldHMiKSwiLiIpLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoiVlMgQ29kZSBTbmlwcGV0cyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vdnMtY29kZS1zbmlwcGV0cy1kZW1vLmdpZiIpLmRlZmF1bHR9KSksbWR4KCJwIixudWxsLCJUbyBhZGQgdGhlc2Ugc25pcHBldHMgdG8geW91ciBWUyBDb2RlOiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiY3RybCtzaGlmdCtwIiksIiA+IFR5cGUgXCJDb25maWd1cmUgdXNlclxuc25pcHBldHNcIiA+IFNlbGVjdCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwicHl0aG9uLmpzb24iKSwiLiBBbGwgb2YgdGhlc2Ugc25pcHBldHMgYXJlIGF2YWlsYWJsZSBoZXJlOlxuIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2FtaW5zYWllZC9BenVyZU1MLUNoZWF0U2hlZXQvYmxvYi9tYXN0ZXIvdnMtY29kZS1zbmlwcGV0cy9weXRob24uanNvbiJ9KSwicHl0aG9uLmpzb24iKSksbWR4KCJoMiIseyJpZCI6ImJhc2ljLWNvcmUtaW1wb3J0cyJ9LCJCYXNpYyBjb3JlIGltcG9ydHMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb24ifSksIlwiQmFzaWMgY29yZSBpbXBvcnRzXCI6IHtcbiAgICAgICAgXCJwcmVmaXhcIjogXCJ3b3Jrc3BhY2UtaW1wb3J0cy1jcmVhdGlvblwiLFxuICAgICAgICBcImJvZHlcIjogW1xuICAgICAgICAgICAgXCJmcm9tIGF6dXJlbWwuY29yZSBpbXBvcnQgV29ya3NwYWNlLCBFeHBlcmltZW50LCBSdW4sIFJ1bkNvbmZpZ3VyYXRpb24sIENvbXB1dGVUYXJnZXQkMVwiLFxuICAgICAgICAgICAgXCIkMFwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJJbXBvcnQgZXNzZW50aWFsIHBhY2thZ2VzXCJcbiAgICB9XG4iKSksbWR4KCJoMiIseyJpZCI6InBpcGVsaW5lLWltcG9ydHMifSwiUGlwZWxpbmUgaW1wb3J0cyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanNvbiJ9KSwiXCJQaXBlbGluZSBJbXBvcnRzXCI6IHtcbiAgICAgICAgXCJwcmVmaXhcIjogXCJwaXBlbGluZS1pbXBvcnRzXCIsXG4gICAgICAgIFwiYm9keVwiOiBbXG4gICAgICAgICAgICBcImZyb20gYXp1cmVtbC5waXBlbGluZS5jb3JlIGltcG9ydCBQaXBlbGluZSwgUGlwZWxpbmVEYXRhLCBQaXBlbGluZVBhcmFtZXRlclwiLFxuICAgICAgICAgICAgXCJmcm9tIGF6dXJlbWwucGlwZWxpbmUuc3RlcHMgaW1wb3J0IFB5dGhvblNjcmlwdFN0ZXAkMVwiLFxuICAgICAgICAgICAgXCIkMFwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJCYXNpYyBpbXBvcnRzIGZvciBwaXBlbGluZVwiXG4gICAgfVxuIikpLG1keCgiaDIiLHsiaWQiOiJjcmVhdGUtYW1sLXdvcmtzcGFjZS1mcm9tLWNvbmZpZyJ9LCJDcmVhdGUgQU1MIFdvcmtzcGFjZSBmcm9tIGNvbmZpZyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanNvbiJ9KSwiXCJDcmVhdGUgQU1MIFdvcmtzcGFjZSBmcm9tIGNvbmZpZ1wiOiB7XG4gICAgICAgIFwicHJlZml4XCI6IFtcIndvcmtzcGFjZS1xdWlja1wiLFwiZnJvbWNvbmZpZ1wiLFwiZnJvbS1jb25maWdcIl0sXG4gICAgICAgIFwiYm9keVwiOiBbXG4gICAgICAgICAgICBcIndzID0gV29ya3NwYWNlLmZyb21fY29uZmlnKClcIixcbiAgICAgICAgICAgIFwiJDBcIlxuICAgICAgICBdLFxuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiRGVmYXVsdCB3b3Jrc3BhY2UgY3JlYXRpb25cIlxuICAgIH1cbiIpKSxtZHgoImgyIix7ImlkIjoiY3JlYXRlLWFtbC13b3Jrc3BhY2UtZnJvbS1jb25maWctYW5kLWF1dGgifSwiQ3JlYXRlIEFNTCBXb3Jrc3BhY2UgZnJvbSBjb25maWcgYW5kIGF1dGgiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb24ifSksIlwiQ3JlYXRlIEFNTCBXb3Jrc3BhY2UgZnJvbSBjb25maWcgYW5kIGF1dGhcIjoge1xuICAgICAgICBcInByZWZpeFwiOiBcIndvcmtzcGFjZS1mcm9tLWNvbmZpZy1hdXRoXCIsXG4gICAgICAgIFwiYm9keVwiOiBbXG4gICAgICAgICAgICBcImZyb20gYXp1cmVtbC5jb3JlLmF1dGhlbnRpY2F0aW9uIGltcG9ydCBJbnRlcmFjdGl2ZUxvZ2luQXV0aGVudGljYXRpb25cIixcbiAgICAgICAgICAgIFwiY29uZmlnID0geydzdWJzY3JpcHRpb25faWQnOickMScsXCIsXG4gICAgICAgICAgICBcIidyZXNvdXJjZV9ncm91cCc6JyQyJyxcIixcbiAgICAgICAgICAgIFwiJ3dvcmtzcGFjZV9uYW1lJyA6JyQzJ31cIixcbiAgICAgICAgICAgIFwiYXV0aCA9IEludGVyYWN0aXZlTG9naW5BdXRoZW50aWNhdGlvbigpXCIsXG4gICAgICAgICAgICBcIndzID0gV29ya3NwYWNlKCoqY29uZmlnLGF1dGggPSBhdXRoKVwiLFxuICAgICAgICAgICAgXCIkMFwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJDcmVhdGUgd29ya3NwYWNlIGZyb20gY29uZmlnIGFuZCBhdXRoXCJcbiAgICB9XG4iKSksbWR4KCJoMiIseyJpZCI6InJlZ2lzdGVyLWF6dXJlLWJsb2ItY29udGFpbmVyLWZyb20tc2FzIn0sIlJlZ2lzdGVyIEF6dXJlIEJsb2IgQ29udGFpbmVyIEZyb20gU0FTIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29uIn0pLCJcIlJlZ2lzdGVyIEF6dXJlIEJsb2IgQ29udGFpbmVyIEZyb20gU0FTXCI6IHtcbiAgICBcInByZWZpeFwiOiBbXCJkYXRhc3RvcmUtcmVnaXN0ZXItYmxvYi1zYXNcIixcInJlZy1ibG9iLXNhc1wiXSxcbiAgICBcImJvZHlcIjogW1xuICAgICAgICBcImRzID0gRGF0YXN0b3JlLnJlZ2lzdGVyX2F6dXJlX2Jsb2JfY29udGFpbmVyKFwiXG4gICAgICAgIFwiICAgIHdvcmtzcGFjZT0nJDEnLFwiXG4gICAgICAgIFwiICAgIGRhdGFzdG9yZV9uYW1lPSckMicsXCIsXG4gICAgICAgIFwiICAgIGNvbnRhaW5lcl9uYW1lPSckMycsXCIsXG4gICAgICAgIFwiICAgIGFjY291bnRfbmFtZT0nJDQnLFwiLFxuICAgICAgICBcIiAgICBzYXNfdG9rZW49JyQ1JyxcIixcbiAgICAgICAgXCIpXCJcbiAgICAgICAgXCIkMFwiXG4gICAgXSxcbiAgICBcImRlc2NyaXB0aW9uXCI6IFwiUmVnaXN0ZXIgQXp1cmUgQmxvYiBjb250YWluZXIgdG8gd29ya3NwYWNlIHZpYSBTQVNcIlxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJjcmVhdGUtY29tcHV0ZS1jbHVzdGVyLXdpdGgtc3NoIn0sIkNyZWF0ZSBDb21wdXRlIENsdXN0ZXIgd2l0aCBTU0giKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb24ifSksIlwiQ3JlYXRlIENvbXB1dGUgQ2x1c3RlciB3aXRoIFNTSFwiOiB7XG4gICAgICAgIFwicHJlZml4XCI6IFtcImNyZWF0ZS1jb21wdXRlLWNsdXN0ZXItc3NoXCJdLFxuICAgICAgICBcImJvZHlcIjogW1xuICAgICAgICAgICAgXCJmcm9tIGF6dXJlbWwuY29yZS5jb21wdXRlIGltcG9ydCBBbWxDb21wdXRlXCIsXG4gICAgICAgICAgICBcImZyb20gYXp1cmVtbC5jb3JlLmNvbXB1dGVfdGFyZ2V0IGltcG9ydCBDb21wdXRlVGFyZ2V0RXhjZXB0aW9uXCIsXG4gICAgICAgICAgICBcInNzaF9wdWJsaWNfa2V5ID0gJyQxJ1wiLFxuICAgICAgICAgICAgXCJjb21wdXRlX2NvbmZpZyA9IEFtbENvbXB1dGUucHJvdmlzaW9uaW5nX2NvbmZpZ3VyYXRpb24odm1fc2l6ZT0nJDQnLG1pbl9ub2Rlcz0kNSwgbWF4X25vZGVzPSQ2LGFkbWluX3VzZXJuYW1lPSckNycsYWRtaW5fdXNlcl9zc2hfa2V5PXNzaF9wdWJsaWNfa2V5LHZtX3ByaW9yaXR5PSckezh8bG93cHJpb3JpdHksZGVkaWNhdGVkfH0nLHJlbW90ZV9sb2dpbl9wb3J0X3B1YmxpY19hY2Nlc3M9J0VuYWJsZWQnKVwiLFxuICAgICAgICAgICAgXCJjbHVzdGVyJDAgPSBDb21wdXRlVGFyZ2V0LmNyZWF0ZSh3b3Jrc3BhY2U9JDksIG5hbWU9JyQxMCcsIGNvbXB1dGVfY29uZmlnKVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJDcmVhdGUgY29tcHV0ZSBjbHVzdGVyIHdpdGggU1NIIGVuYWJsZWRcIlxuICAgIH1cbiIpKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}